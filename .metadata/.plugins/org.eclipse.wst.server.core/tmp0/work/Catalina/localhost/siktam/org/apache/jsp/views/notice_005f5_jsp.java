/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-02-27 09:49:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.kh.semi.notice.model.vo.*;
import java.util.ArrayList;
import com.kh.semi.shop.model.vo.Shop;
import com.kh.semi.member.model.vo.*;

public final class notice_005f5_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/views/common/header.jsp", Long.valueOf(1582645757249L));
    _jspx_dependants.put("/views/common/footer.jsp", Long.valueOf(1582645755766L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.kh.semi.notice.model.vo");
    _jspx_imports_packages.add("com.kh.semi.member.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.semi.shop.model.vo.Shop");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
 
	ArrayList<Notice> list = (ArrayList<Notice>)request.getAttribute("list");
	PageInfo pi = (PageInfo)request.getAttribute("pi");
	int listCount = pi.getListCount();
	int currentPage = pi.getCurrentPage();
	int maxPage = pi.getMaxPage();
	int startPage = pi.getStartPage();
	int endPage = pi.getEndPage();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>공지사항</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/siktam/resources/css/headerfooterLayout.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/siktam/resources/css/notice_5.css\">\r\n");
      out.write("    <script src=\"/siktam/resources/js/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- 헤더 시작 -->\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Member m = (Member)session.getAttribute("member");
	ArrayList<Shop> slist=new ArrayList<Shop>();
	if(m!=null&&m.getShopYN().equals("Y")){
		slist=(ArrayList<Shop>)session.getAttribute("shop");		
	}else{
		slist=null;
	}
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("    <nav id=\"nav\">\n");
      out.write("    \t<div id=\"logodiv\"><a href=\"/siktam/listMain.ma\"><img id=\"logo\" src=\"/siktam/resources/images/KakaoTalk_20200101_193858750.png\" alt=\"\" style=\"width:50px; height:50px; margin-top:10px;\"></a></div>\r\n");
      out.write("\r\n");
      out.write("    \t<div id=\"navp\">\r\n");
      out.write("\t        ");
 if(m!=null && m.getUserId().equals("4dich")){ 
      out.write("\r\n");
      out.write("\t        \t<a class=\"navp\" href=\"/siktam/views/admin_main_4.jsp\"><span>관리자</span></a>\r\n");
      out.write("\t        ");
 } 
      out.write("\r\n");
      out.write("            <a class=\"navp\" href=\"/siktam/nselectList.no\"><span>공지사항</span></a>\r\n");
      out.write("            <a class=\"navp\" href=\"/siktam/QnaListServlet\"><span>문의사항</span></a>\r\n");
      out.write("            ");
if(m==null) {
      out.write("\r\n");
      out.write("            ");
}else if(m.getShopYN().equals("N")){
      out.write("\r\n");
      out.write("            \t<a class=\"navp\" href=\"/siktam/mypageMember.mm\"><span>마이페이지</span></a>\r\n");
      out.write("            ");
}else{ 
      out.write("\r\n");
      out.write("            \t<a class=\"navp\" href=\"/siktam/views/mypageShop_5.jsp\"><span>마이페이지</span></a>\r\n");
      out.write("            ");
} 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            ");
 if(m==null){ 
      out.write("\r\n");
      out.write("\t\t\t\t<a class=\"navp\" href=\"/siktam/views/login_2.jsp\"><span style=\"border: 2px solid rgb(13, 78, 100); color:rgb(13, 78, 100); background-color:white; padding:5px\">로그인</span></a>\r\n");
      out.write("            ");
 }else{ 
      out.write("\r\n");
      out.write("            \t<a class=\"navp\" onclick=\"location.href='/siktam/logout.do'; alert('로그아웃되었습니다')\"><span style=\"cursor: pointer; border: 2px solid rgb(13, 78, 100); color:rgb(13, 78, 100); background-color:white; padding:5px\">로그아웃</span></a>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- 이 안에 작업하기 -->\r\n");
      out.write("    <div class=\"wrap\" align=\"center\">\r\n");
      out.write("            <div class=\"noticeTitle\">\r\n");
      out.write("                <h1>공지사항</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"tableDiv\">\r\n");
      out.write("                    <table id=\"listArea\">\r\n");
      out.write("                        <thead>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                              <th>번호</th>\r\n");
      out.write("                              <th style=\"width:70%\">제목</th>\r\n");
      out.write("                              <th>작성자</th>\r\n");
      out.write("                              <th>작성일</th>\r\n");
      out.write("                              <th>조회</th>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                        <tbody>\r\n");
      out.write("                            ");
 for(Notice n : list){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print( n.getnNo() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print( n.getnTitle() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print( n.getnWriter() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print( n.getnDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print( n.getnCount() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"pagingArea\" align=\"center\">\r\n");
      out.write("\t\t\t<button onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/nselectList.no?currentPage=1'\"><<</button>\r\n");
      out.write("\t\t\t");
  if(currentPage <= 1){  
      out.write("\r\n");
      out.write("\t\t\t<button disabled><</button>\r\n");
      out.write("\t\t\t");
  }else{ 
      out.write("\r\n");
      out.write("\t\t\t<button onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/nselectList.no?currentPage=");
      out.print(currentPage - 1 );
      out.write("'\"><</button>\r\n");
      out.write("\t\t\t");
  } 
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
 for(int p = startPage; p <= endPage; p++){
					if(p == currentPage){	
			
      out.write("\r\n");
      out.write("\t\t\t\t<button disabled>");
      out.print( p );
      out.write("</button>\r\n");
      out.write("\t\t\t");
      }else{ 
      out.write("\r\n");
      out.write("\t\t\t\t<button onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/nselectList.no?currentPage=");
      out.print( p );
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print( p );
      out.write("</button>\r\n");
      out.write("\t\t\t");
      } 
      out.write("\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t");
  if(currentPage >= maxPage){  
      out.write("\r\n");
      out.write("\t\t\t<button disabled>></button>\r\n");
      out.write("\t\t\t");
  }else{ 
      out.write("\r\n");
      out.write("\t\t\t<button onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/nselectList.no?currentPage=");
      out.print(currentPage + 1 );
      out.write("'\">></button>\r\n");
      out.write("\t\t\t");
  } 
      out.write("\r\n");
      out.write("\t\t\t<button onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/nselectList.no?currentPage=");
      out.print( maxPage );
      out.write("'\">>></button>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("            \r\n");
      out.write("            <fieldset>\r\n");
      out.write("                <!--<label for=\"name\"><input type=\"radio\" name=\"search\" value=\"writer\">작성자</label>\r\n");
      out.write("                <label for=\"title\"><input type=\"radio\" name=\"search\" value=\"title\">제목</label>\r\n");
      out.write("                <label for=\"text\"><input type=\"radio\" name=\"search\" value=\"text\">내용</label>  -->\r\n");
      out.write("                <select id=\"searchCondition\">\r\n");
      out.write("                \t<option>---</option>\r\n");
      out.write("                \t<option value=\"writer\">작성자</option>\r\n");
      out.write("                \t<option value=\"title\">제목</option>\r\n");
      out.write("                \t<option value=\"context\">내용</option>\r\n");
      out.write("                </select>\r\n");
      out.write("                <input type=\"text\" id=\"keyword\">\r\n");
      out.write("                <input type=\"button\" id=\"searchBtn\" value=\"검색\">\r\n");
      out.write("                ");
 if(m != null && m.getUserId().equals("4dich")){ 
      out.write("\r\n");
      out.write("                \t<input type=\"button\" id=\"searchBtn\" value=\"글쓰기\" onclick=\"location.href='views/noticeInsertForm_7.jsp'\">\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </fieldset>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\t<script>  \r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#listArea td\").mouseenter(function(){\r\n");
      out.write("\t\t\t\t$(this).parent().css({\"background\":\"lightgray\", \"cursor\":\"pointer\"});\r\n");
      out.write("\t\t\t}).mouseout(function(){\r\n");
      out.write("\t\t\t\t$(this).parent().css({\"background\":\"white\"});\r\n");
      out.write("\t\t\t}).click(function(){\r\n");
      out.write("\t\t\t\t//console.log($(this).parent().children().eq(0).text());\r\n");
      out.write("\t\t\t\tvar nno = $(this).parent().children().eq(0).text();\r\n");
      out.write("\t\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/nselectOne.no?nno=\" + nno;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#searchBtn').click(function(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/nsearchNotice.no?con=\"+$('#searchCondition').val()+\"&keyword=\"+$('#keyword').val();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    <!-- 푸터 시작 -->\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<footer>\r\n");
      out.write("    <div id=\"footerArea\">\r\n");
      out.write("    <p>\r\n");
      out.write("\t\t<b>식탐</b><br>\r\n");
      out.write("\t\t서울시 강남구 역상동 테헤란로 12길 남도빌딩 kh정보교육원 3층 h클래스 <br>\r\n");
      out.write("\t\t대표자 : 상또두리 | 사업자 등록번호 : 328478-24-2348971<br>\r\n");
      out.write("\t\t전화 : 010365656 | 팩스 : 0236541255| honbabsiktam.co.kr<br>\r\n");
      out.write("        <b>Copyright ⓒ 식탐 All rights reserved</b>\r\n");
      out.write("    </p>\r\n");
      out.write("    </div>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
