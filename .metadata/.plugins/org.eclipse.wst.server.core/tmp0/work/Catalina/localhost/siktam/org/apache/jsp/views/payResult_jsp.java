/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-02-25 15:55:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.kh.semi.shop.model.vo.Shop;
import com.kh.semi.member.model.vo.*;

public final class payResult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/common/header.jsp", Long.valueOf(1582645757249L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.kh.semi.member.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.semi.shop.model.vo.Shop");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>결제 중</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.12.4.min.js\" ></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdn.iamport.kr/js/iamport.payment-1.1.5.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Montserrat\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/siktam/resources/css/searchConditions_4.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/siktam/resources/css/headerfooterLayout.css\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\theader{\r\n");
      out.write("\t\tdisplay: none;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Member m = (Member)session.getAttribute("member");
	ArrayList<Shop> slist=new ArrayList<Shop>();
	if(m!=null&&m.getShopYN().equals("Y")){
		slist=(ArrayList<Shop>)session.getAttribute("shop");		
	}else{
		slist=null;
	}
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("    <nav id=\"nav\">\n");
      out.write("    \t<div id=\"logodiv\"><a href=\"/siktam/listMain.ma\"><img id=\"logo\" src=\"/siktam/resources/images/KakaoTalk_20200101_193858750.png\" alt=\"\" style=\"width:50px; height:50px; margin-top:10px;\"></a></div>\r\n");
      out.write("\r\n");
      out.write("    \t<div id=\"navp\">\r\n");
      out.write("\t        ");
 if(m!=null && m.getUserId().equals("4dich")){ 
      out.write("\r\n");
      out.write("\t        \t<a class=\"navp\" href=\"/siktam/views/admin_main_4.jsp\"><span>관리자</span></a>\r\n");
      out.write("\t        ");
 } 
      out.write("\r\n");
      out.write("            <a class=\"navp\" href=\"/siktam/nselectList.no\"><span>공지사항</span></a>\r\n");
      out.write("            <a class=\"navp\" href=\"/siktam/QnaListServlet\"><span>문의사항</span></a>\r\n");
      out.write("            ");
if(m==null) {
      out.write("\r\n");
      out.write("            ");
}else if(m.getShopYN().equals("N")){
      out.write("\r\n");
      out.write("            \t<a class=\"navp\" href=\"/siktam/mypageMember.mm\"><span>마이페이지</span></a>\r\n");
      out.write("            ");
}else{ 
      out.write("\r\n");
      out.write("            \t<a class=\"navp\" href=\"/siktam/views/mypageShop_5.jsp\"><span>마이페이지</span></a>\r\n");
      out.write("            ");
} 
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            ");
 if(m==null){ 
      out.write("\r\n");
      out.write("\t\t\t\t<a class=\"navp\" href=\"/siktam/views/login_2.jsp\"><span style=\"border: 2px solid rgb(13, 78, 100); color:rgb(13, 78, 100); background-color:white; padding:5px\">로그인</span></a>\r\n");
      out.write("            ");
 }else{ 
      out.write("\r\n");
      out.write("            \t<a class=\"navp\" onclick=\"location.href='/siktam/logout.do'; alert('로그아웃되었습니다')\"><span style=\"cursor: pointer; border: 2px solid rgb(13, 78, 100); color:rgb(13, 78, 100); background-color:white; padding:5px\">로그아웃</span></a>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("</header>");
      out.write('\r');
      out.write('\n');
      out.write('	');
	
	    String name = m.getName();
	    String phone = m.getPhone();
	    String address = m.getAddr();
	    /* int totalPrice = (int)request.getAttribute("totalPrice"); */
	    String payType = request.getParameter("payType");
	    String totalPrice = request.getParameter("totalPay");
	    String mileage = request.getParameter("mileage");
	    String couponNo = request.getParameter("couponNo");
	    String rNo = request.getParameter("rNo");
	
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("    <script>\r\n");
      out.write("    $(function(){\r\n");
      out.write("        var IMP = window.IMP; // 생략가능\r\n");
      out.write("        IMP.init('imp26836745'); // 'iamport' 대신 부여받은 \"가맹점 식별코드\"를 사용\r\n");
      out.write("        \r\n");
      out.write("        IMP.request_pay({\r\n");
      out.write("            pg : 'kakaopay',\r\n");
      out.write("            pay_method : 'card',\r\n");
      out.write("            merchant_uid : 'merchant_' + new Date().getTime(),\r\n");
      out.write("            name : '식탐,나에게 맞은 식당을 탐색하다',\r\n");
      out.write("            amount : '");
      out.print(totalPrice);
      out.write("',\r\n");
      out.write("            buyer_name : '");
      out.print(name);
      out.write("',\r\n");
      out.write("            buyer_tel : '");
      out.print(phone);
      out.write("',\r\n");
      out.write("            buyer_addr : '");
      out.print(address);
      out.write("',\r\n");
      out.write("            buyer_postcode : '123-456',\r\n");
      out.write("            //m_redirect_url : 'http://www.naver.com'\r\n");
      out.write("        }, function(rsp) {\r\n");
      out.write("            if ( rsp.success ) {\r\n");
      out.write("                //[1] 서버단에서 결제정보 조회를 위해 jQuery ajax로 imp_uid 전달하기\r\n");
      out.write("                jQuery.ajax({\r\n");
      out.write("                    url: \"/payments/complete\", //cross-domain error가 발생하지 않도록 주의해주세요\r\n");
      out.write("                    type: 'POST',\r\n");
      out.write("                    dataType: 'json',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        imp_uid : rsp.imp_uid\r\n");
      out.write("                        //기타 필요한 데이터가 있으면 추가 전달\r\n");
      out.write("                    }\r\n");
      out.write("                }).done(function(data) {\r\n");
      out.write("                    //[2] 서버에서 REST API로 결제정보확인 및 서비스루틴이 정상적인 경우\r\n");
      out.write("                    if ( everythings_fine ) {\r\n");
      out.write("                        msg = '결제가 완료되었습니다.';\r\n");
      out.write("                        msg += '\\n고유ID : ' + rsp.imp_uid;\r\n");
      out.write("                        msg += '\\n상점 거래ID : ' + rsp.merchant_uid;\r\n");
      out.write("                        msg += '\\결제 금액 : ' + rsp.paid_amount;\r\n");
      out.write("                        msg += '카드 승인번호 : ' + rsp.apply_num;\r\n");
      out.write("                        \r\n");
      out.write("                    } else {\r\n");
      out.write("                        //[3] 아직 제대로 결제가 되지 않았습니다.\r\n");
      out.write("                        //[4] 결제된 금액이 요청한 금액과 달라 결제를 자동취소처리하였습니다.\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tvar msg = \"\";\r\n");
      out.write("                msg+='");
      out.print(payType);
      out.write("';\r\n");
      out.write("                msg+='&totalPrice=");
      out.print(totalPrice);
      out.write("';\r\n");
      out.write("                msg+='&mileage=");
      out.print(mileage);
      out.write("';\r\n");
      out.write("                msg+='&couponNo=");
      out.print(couponNo);
      out.write("';\r\n");
      out.write("                msg+='&rNo=");
      out.print(rNo);
      out.write("';\r\n");
      out.write("                \r\n");
      out.write("                //성공시 이동할 페이지\r\n");
      out.write("                location.href=\"/siktam/pInsert.pa?payType=\"+msg;\r\n");
      out.write("            } else {\r\n");
      out.write("                msg = '결제에 실패하였습니다.';\r\n");
      out.write("                /* msg += '에러내용 : ' + rsp.error_msg; */\r\n");
      out.write("                //실패시 이동할 페이지\r\n");
      out.write("                location.href='");
      out.print(request.getContextPath());
      out.write("/views/common/errorPage.jsp?msg='+msg;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("    });\r\n");
      out.write("    </script>\r\n");
      out.write(" \t\r\n");
      out.write(" \t<div style=\"text-align:center; margin: auto; margin-top: 10%; padding: 50px; border: 3px dotted rgb(13, 78, 100); width: 40%\" >\r\n");
      out.write("\t\t<img src=\"/siktam/resources/images/error_icon.png\" style=\"height: 100px; width: 100px\">\r\n");
      out.write("\t\t<h1><b>결제가 진행중입니다</b></h1><br>\r\n");
      out.write("\t\t<h3>결제창을 통해  결제를 진행해주세요</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write(" \t\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
